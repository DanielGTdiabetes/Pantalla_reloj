#!/usr/bin/env bash
set -euo pipefail

: "${DISPLAY:=:0}"
: "${XAUTHORITY:=/var/lib/pantalla-reloj/.Xauthority}"

LOG_DIR=/var/log/pantalla
VERIFY_LOG="${LOG_DIR}/kiosk-verify.log"
SANITIZE_LOG="${LOG_DIR}/kiosk-sanitize.log"
SANITIZER=/opt/pantalla/bin/pantalla-kiosk-sanitize.sh
WM_CLASS="epiphany.epiphany"
prepare_logs() {
  install -d -m 0755 "$LOG_DIR"
  : >"${VERIFY_LOG}.tmp"
}

run_and_capture() {
  local desc="$1"
  shift
  {
    printf '--- %s ---\n' "$desc"
    printf 'CMD: %s\n' "$*"
    if "$@"; then
      printf 'status=0\n\n'
    else
      printf 'status=%s\n\n' "$?"
    fi
  } >>"${VERIFY_LOG}.tmp" 2>&1
}

main() {
  prepare_logs

  if [[ -x "$SANITIZER" ]]; then
    DISPLAY="$DISPLAY" XAUTHORITY="$XAUTHORITY" "$SANITIZER" --delay 0 --timeout 8 --wm-class "$WM_CLASS" --log "$SANITIZE_LOG" || true
  fi

  run_and_capture "xrandr --query" env DISPLAY="$DISPLAY" XAUTHORITY="$XAUTHORITY" xrandr --query
  run_and_capture "wmctrl -lx" env DISPLAY="$DISPLAY" XAUTHORITY="$XAUTHORITY" wmctrl -lx
  run_and_capture "_NET_ACTIVE_WINDOW" env DISPLAY="$DISPLAY" XAUTHORITY="$XAUTHORITY" xprop -root _NET_ACTIVE_WINDOW
  if command -v xprop >/dev/null 2>&1; then
    active_id=$(env DISPLAY="$DISPLAY" XAUTHORITY="$XAUTHORITY" xprop -root _NET_ACTIVE_WINDOW 2>/dev/null | awk -F'# ' 'NF>1 {print $2}' | awk '{print $1}')
    if [[ -n "$active_id" ]]; then
      run_and_capture "_NET_WM_STATE ${active_id}" env DISPLAY="$DISPLAY" XAUTHORITY="$XAUTHORITY" xprop -id "$active_id" _NET_WM_STATE
    fi
  fi
  run_and_capture "backend health" curl -fsS -o /dev/null -w '%{http_code}\n' "${PANTALLA_KIOSK_HEALTH_URL:-http://127.0.0.1:8081/healthz}"

  mv "${VERIFY_LOG}.tmp" "$VERIFY_LOG"
}

main "$@"
