#!/usr/bin/env bash
set -euo pipefail

log() {
  printf '[pantalla-kiosk-verify] %s\n' "$*"
}

KIOSK_USER="${KIOSK_USER:-dani}"
: "${DISPLAY:=:0}"
: "${XAUTHORITY:=/home/${KIOSK_USER}/.Xauthority}"

PROCESS_PATTERN='/snap/chromium/.*/chrome .*--class=pantalla-kiosk'

if ! pgrep -af "$PROCESS_PATTERN" >/dev/null; then
  log "Proceso de Chromium con clase pantalla-kiosk no encontrado"
  exit 1
fi

if ! command -v wmctrl >/dev/null 2>&1; then
  log "wmctrl no disponible"
  exit 1
fi

WINDOW_LIST=$(DISPLAY="$DISPLAY" XAUTHORITY="$XAUTHORITY" wmctrl -lx 2>/dev/null || true)
if [[ -z "$WINDOW_LIST" ]]; then
  log "No se pudo obtener la lista de ventanas"
  exit 1
fi

if ! grep -q 'pantalla-kiosk' <<<"$WINDOW_LIST"; then
  log "No hay ventanas con clase pantalla-kiosk"
  exit 1
fi

WINDOW_ID=$(awk '/pantalla-kiosk/{print $1; exit}' <<<"$WINDOW_LIST")
if [[ -z "$WINDOW_ID" ]]; then
  log "No se pudo determinar el ID de la ventana"
  exit 1
fi

if ! command -v xprop >/dev/null 2>&1; then
  log "xprop no disponible"
  exit 1
fi

STATE=$(DISPLAY="$DISPLAY" XAUTHORITY="$XAUTHORITY" xprop -id "$WINDOW_ID" _NET_WM_STATE 2>/dev/null || true)
if [[ -z "$STATE" ]]; then
  log "No se pudo obtener _NET_WM_STATE para la ventana $WINDOW_ID"
  exit 1
fi

if ! grep -Eq 'FULLSCREEN|ABOVE' <<<"$STATE"; then
  log "La ventana $WINDOW_ID no está en estado FULLSCREEN o ABOVE"
  exit 1
fi

log "Kiosk operativo (proceso y ventana válidos)"
exit 0
