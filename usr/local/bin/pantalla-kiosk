#!/usr/bin/env bash
set -euo pipefail

DEFAULT_ORIGIN="http://127.0.0.1"
DEFAULT_URL="${DEFAULT_ORIGIN}/"
DEFAULT_STATE_DIR="/var/lib/pantalla-reloj/state"
DEFAULT_LOG_DIR="/var/log/pantalla"

log() {
  printf '[pantalla-kiosk] %s\n' "$*" >&2
}

resolve_url() {
  local candidate="$1"
  if [[ -z "$candidate" ]]; then
    candidate="$DEFAULT_URL"
  fi
  if [[ "$candidate" == /* ]]; then
    candidate="${DEFAULT_ORIGIN%/}${candidate}"
  fi
  if [[ "$candidate" != http://* && "$candidate" != https://* ]]; then
    candidate="${candidate%/}"
    candidate="${DEFAULT_ORIGIN%/}/${candidate}"
  fi
  printf '%s\n' "$candidate"
}

resolve_binary() {
  local candidate="$1"
  if [[ -z "$candidate" ]]; then
    return 1
  fi
  if [[ "$candidate" == */* ]]; then
    if [[ -x "$candidate" ]]; then
      printf '%s\n' "$candidate"
      return 0
    fi
    return 1
  fi
  if command -v "$candidate" >/dev/null 2>&1; then
    printf '%s\n' "$(command -v "$candidate")"
    return 0
  fi
  return 1
}

find_chromium() {
  local override
  override="${CHROME_BIN_OVERRIDE:-${CHROMIUM_BIN_OVERRIDE:-}}"
  if [[ -n "$override" ]]; then
    if resolved_bin="$(resolve_binary "$override" 2>/dev/null)"; then
      printf '%s\n' "$resolved_bin"
      return 0
    fi
    log "WARN: CHROME_BIN_OVERRIDE inválido (${override})"
  fi

  local snap_candidate="/snap/chromium/current/usr/lib/chromium-browser/chrome"
  if [[ -x "$snap_candidate" ]]; then
    printf '%s\n' "$snap_candidate"
    return 0
  fi

  local -a candidates=(
    /snap/bin/chromium
    chromium
    google-chrome-stable
    google-chrome
  )
  local candidate resolved
  for candidate in "${candidates[@]}"; do
    if resolved="$(resolve_binary "$candidate" 2>/dev/null)"; then
      if [[ "$resolved" == "/usr/bin/chromium-browser" ]]; then
        log "INFO: Ignorando shim de chromium-browser en ${resolved}"
        continue
      fi
      printf '%s\n' "$resolved"
      return 0
    fi
  done

  return 1
}

find_firefox() {
  local override
  override="${FIREFOX_BIN_OVERRIDE:-}"
  if [[ -n "$override" ]]; then
    if resolve_binary "$override"; then
      return 0
    fi
    log "WARN: FIREFOX_BIN_OVERRIDE inválido (${override})"
  fi

  local -a candidates=(firefox firefox-esr)
  local candidate
  for candidate in "${candidates[@]}"; do
    if resolve_binary "$candidate"; then
      return 0
    fi
  done

  return 1
}

prepare_dir() {
  local dir="$1"
  install -d -m 0700 "$dir"
}

prepare_log_dir() {
  local dir="$1"
  install -d -m 0755 "$dir" >/dev/null 2>&1 || true
}

kill_existing() {
  command -v pkill >/dev/null 2>&1 || return 0
  local -a names=(
    chromium
    chromium-browser
    chrome
    google-chrome
    google-chrome-stable
    firefox
    firefox-esr
  )
  local name
  for name in "${names[@]}"; do
    pkill -u "$(id -u)" -x "$name" >/dev/null 2>&1 || true
  done
}

launch_chromium() {
  local binary="$1" url="$2" profile_dir="$3" log_file="$4"
  local -a cmd
  cmd=(
    "$binary"
    --class=pantalla-kiosk
    --kiosk
    --no-first-run
    --no-default-browser-check
    --password-store=basic
    "--user-data-dir=${profile_dir}"
    "$url"
  )

  log "chromium_bin: ${binary}"
  log "profile_dir: ${profile_dir}"
  log "launch: ${cmd[*]}"
  log "url: ${url}"

  if ! exec "${cmd[@]}" >>"$log_file" 2>&1; then
    log "ERROR: fallo al ejecutar Chromium (${binary})"
    exit 1
  fi
}

launch_firefox() {
  local binary="$1" url="$2" profile_dir="$3" log_file="$4"
  local -a cmd
  cmd=(
    "$binary"
    --kiosk
    --new-instance
    --profile "$profile_dir"
    --no-remote
    "$url"
  )

  export MOZ_DISABLE_SAFE_MODE_DIALOG=1
  export MOZ_USE_XINPUT2=1
  export MOZ_CRASHREPORTER_DISABLE=1

  log "firefox_bin: ${binary}"
  log "profile_dir: ${profile_dir}"
  log "launch: ${cmd[*]}"
  log "url: ${url}"

  if ! exec "${cmd[@]}" >>"$log_file" 2>&1; then
    log "ERROR: fallo al ejecutar Firefox (${binary})"
    exit 1
  fi
}

main() {
  : "${DISPLAY:=:0}"
  : "${XAUTHORITY:?XAUTHORITY must be set}"
  : "${XDG_RUNTIME_DIR:=/run/user/$(id -u)}"
  : "${DBUS_SESSION_BUS_ADDRESS:=unix:path=/run/user/$(id -u)/bus}"

  export GTK_USE_PORTAL="${GTK_USE_PORTAL:-0}"
  export GIO_USE_PORTALS="${GIO_USE_PORTALS:-0}"
  export GDK_BACKEND="${GDK_BACKEND:-x11}"

  local raw_url target_url
  raw_url="${1:-${KIOSK_URL:-}}"
  target_url="$(resolve_url "$raw_url")"

  local state_base
  state_base="${PANTALLA_STATE_DIR:-${DEFAULT_STATE_DIR}}"

  local chromium_profile firefox_profile
  chromium_profile="${CHROMIUM_PROFILE_DIR:-${state_base}/chromium-kiosk}"
  firefox_profile="${FIREFOX_PROFILE_DIR:-${state_base}/firefox-kiosk}"

  local log_dir log_file
  log_dir="${PANTALLA_KIOSK_LOG_DIR:-${DEFAULT_LOG_DIR}}"
  log_file="${log_dir}/browser-kiosk.log"

  install -d -m 0755 "$state_base"
  prepare_dir "$chromium_profile"
  prepare_dir "$firefox_profile"
  prepare_log_dir "$log_dir"

  kill_existing

  local browser
  if browser="$(find_chromium)"; then
    launch_chromium "$browser" "$target_url" "$chromium_profile" "$log_file"
  fi

  if browser="$(find_firefox)"; then
    launch_firefox "$browser" "$target_url" "$firefox_profile" "$log_file"
  fi

  log "ERROR: no se encontró un navegador compatible (Chromium/Firefox)"
  exit 1
}

main "$@"
