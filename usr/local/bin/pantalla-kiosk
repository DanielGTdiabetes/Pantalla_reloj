#!/usr/bin/env bash
set -euxo pipefail

URL="${1:-http://127.0.0.1}"
LOG=/tmp/kiosk-launch.log
ERR=/tmp/browser.err

: "${DISPLAY:=:0}"
: "${XAUTHORITY:?XAUTHORITY must be set}"
: "${XDG_RUNTIME_DIR:=/run/user/1000}"

STATE_DIR=/var/lib/pantalla-reloj/state
PROFILE_DIR="$STATE_DIR/chromium-profile"
LOCK="$STATE_DIR/kiosk.lock"

OWNER="${KIOSK_USER:-${USER:-$(id -un)}}"

install -d -m 0755 "$STATE_DIR" "$PROFILE_DIR"
chown -R "$OWNER:$OWNER" "$STATE_DIR" "$PROFILE_DIR" || true

{
  echo "[kiosk] $(date -Is) start user=$(id -un) DISPLAY=$DISPLAY XAUTHORITY=$XAUTHORITY URL=$URL"
} >>"$LOG"

# única instancia
exec 9>"$LOCK"
flock -n 9 || { echo "[kiosk] already running" >>"$LOG"; exit 0; }

# esperar X usable
DISPLAY="$DISPLAY" XAUTHORITY="$XAUTHORITY" /opt/pantalla/bin/wait-x.sh >>"$LOG" 2>&1

# esperar HTTP (front/api) sin bloquear el arranque si fallan
wait_http() {
  local name="$1" url="$2" max="$3"
  for i in $(seq 1 "$max"); do
    if curl -fsS -m 1 "$url" >/dev/null; then
      echo "[kiosk] $name OK $url" >>"$LOG"
      return 0
    fi
    echo "[kiosk] $name not ready $url ($i/$max)" >>"$LOG"
    sleep 1
  done
  return 1
}
wait_http FRONT http://127.0.0.1 10 || true
wait_http API   http://127.0.0.1:8081/healthz 10 || true

# detectar chromium
CHROMIUM_BIN=""
for c in chromium chromium-browser google-chrome-stable google-chrome; do
  command -v "$c" >/dev/null 2>&1 && { CHROMIUM_BIN="$(command -v "$c")"; break; }
done
[ -n "$CHROMIUM_BIN" ] || { echo "[kiosk] chromium not found" >>"$LOG"; exit 1; }

# evitar portals/diálogos
export GTK_USE_PORTAL=0
export XDG_DESKTOP_PORTAL_DIR=/nonexistent

COMMON_FLAGS=(
  --no-first-run
  --no-default-browser-check
  --kiosk
  --app="$URL"
  --new-window
  --incognito
  --disable-features=Translate,AutofillServerCommunication,Printing,MediaRouter,DownloadBubble,TabHoverCardImages
  --disable-extensions
  --disable-sync
  --disable-session-crashed-bubble
  --disable-infobars
  --disable-logging
  --enable-logging=stderr
  --password-store=basic
  --overscroll-history-navigation=0
  --user-data-dir="$PROFILE_DIR"
)

# matar instancias viejas del mismo profile (suave)
pkill -TERM -f "$CHROMIUM_BIN.*--user-data-dir=$PROFILE_DIR" || true
sleep 0.2

# lanzar
exec env -i DISPLAY="$DISPLAY" XAUTHORITY="$XAUTHORITY" XDG_RUNTIME_DIR="$XDG_RUNTIME_DIR" \
  GTK_USE_PORTAL="$GTK_USE_PORTAL" XDG_DESKTOP_PORTAL_DIR="$XDG_DESKTOP_PORTAL_DIR" \
  "$CHROMIUM_BIN" "${COMMON_FLAGS[@]}" >>"$LOG" 2>>"$ERR"
