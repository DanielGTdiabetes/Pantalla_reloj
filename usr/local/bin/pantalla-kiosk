#!/usr/bin/env bash
set -euo pipefail

LOG_FILE=/tmp/kiosk-launch.log
exec >>"$LOG_FILE" 2>&1
printf '\n[%s] pantalla-kiosk starting (pid=%s, url=%s)\n' "$(date -Is)" "$$" "${1:-http://127.0.0.1}"

URL="${1:-http://127.0.0.1}"
PROFILE_DIR="${PANTALLA_KIOSK_PROFILE:-$HOME/.config/epiphany-pantalla}"
mkdir -p "$PROFILE_DIR"

# Espera con reintentos al backend antes de abrir el navegador
health_url="http://127.0.0.1:8081/healthz"
max_attempts=30
attempt=1
while [ $attempt -le $max_attempts ]; do
  if curl -fsS --max-time 1 "$health_url" >/dev/null 2>&1; then
    printf '[%s] backend disponible en %s (intento %s)\n' "$(date -Is)" "$health_url" "$attempt"
    break
  fi
  sleep 1
  attempt=$((attempt + 1))
done

if [ $attempt -gt $max_attempts ]; then
  printf '[%s] backend no respondiÃ³ en %s intentos, continuando\n' "$(date -Is)" "$max_attempts"
fi

# Evitar procesos residuales previos
if pgrep -x epiphany >/dev/null 2>&1; then
  printf '[%s] cerrando instancias anteriores de epiphany\n' "$(date -Is)"
  pkill -TERM -x epiphany || true
  sleep 2
fi

exec /usr/bin/epiphany --new-window --application-mode --profile="${PROFILE_DIR}" "$URL"
